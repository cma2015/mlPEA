<tool id="TransLiG_Assembly" name="TransLiG Assembly">
  <description></description>
  <command><![CDATA[
	mkdir -p /home/galaxy/$$/ &&
	#if $paired.is_paired == "paired":
		#set $lopt = list()
		#set $ropt = list()
		#for $i,$s in enumerate($paired.PE_fastqFiles):
			ln -sf $s.PE_FASTQ_R1 $s.PE_FASTQ_R1'.fq';
			$lopt.append(str($s.PE_FASTQ_R1)+'.fq')
		#end for
		#for $i,$s in enumerate($paired.PE_fastqFiles):
			ln -sf $s.PE_FASTQ_R2 $s.PE_FASTQ_R2'.fq';
			$ropt.append(str($s.PE_FASTQ_R2)+'.fq')
		#end for
		#set lopt = ' '.join($lopt)
		#set ropt = ' '.join($ropt)
		cat $lopt > /home/galaxy/$$/left.fq;
		cat $ropt > /home/galaxy/$$/right.fq;
	#else:
		#set $opt = list()
		#for $i,$s in enumerate($paired.SE_fastqFiles):
			ln -sf $s.SE_FASTQ $s.SE_FASTQ'.fq';
			$opt.append(str($s.SE_FASTQ)+'.fq')
		#end for
		#set opt = ' '.join($opt)
		cat $opt > /home/galaxy/$$/single.fq;
	#end if
	bash /home/galaxy/My_TransLiG/run.sh -s fq -t $transcript_length -R /home/galaxy/$$/ -o ./
	#if $paired.is_paired == "paired":
		-p pair
		-l /home/galaxy/$$/left.fq
		-r /home/galaxy/$$/right.fq
		#if $paired.strand_specific.is_strand_specific == "strand_specific":
			-m $paired.strand_specific.libType 
		#end if
	#else:
		-p single
		-m /home/galaxy/$$/single.fq
		#if $single.strand_specific.is_strand_specific == "strand_specific":
			-m $single.strand_specific.libType
		#end if
	#end if
	&& mv /home/galaxy/$$/TransLiG_Out_Dir/TransLiG.fa $fastq0
	&& rm -rf /home/galaxy/$$/
	
  ]]></command>
  <inputs>
    <conditional name="paired">
        <param name="is_paired" type="select" label="Single-end or paired-end reads?">
            <option value="single" > single-end</option>
            <option value="paired" selected="true">paired-end</option>
        </param>
		<when value="single">
			<conditional name="strand_specific">
        		<param name="is_strand_specific" type="select" label="Strand-specific reads?">
            		<option value="non_strand_specific" selected="true"> non-strand-specific</option>
            		<option value="strand_specific">strand-specific</option>
        		</param>
				<when value="strand_specific">
					<param name="libType" type="select" label="Strand Specific lib type">
            			<option value="F" selected="true"> F</option>
            			<option value="R">R</option>
        			</param>
				</when>
    		</conditional>
			<repeat name="SE_fastqFiles" title="FASTQ file" min="1" default="1">
        		<param name="SE_FASTQ" type="data" format="fastqsanger,fastqsanger.gz,fastq,fq"  multiple="false" label="Input the FASTQ file" help=""/>
    		</repeat>
		</when>
		<when value="paired">
			<conditional name="strand_specific">
        		<param name="is_strand_specific" type="select" label="Strand-specific reads?">
            		<option value="non_strand_specific" selected="true"> non-strand-specific</option>
            		<option value="strand_specific">strand-specific</option>
        		</param>
				<when value="strand_specific">
					<param name="libType" type="select" label="Strand Specific lib type">
            			<option value="FR" selected="true">FR</option>
            			<option value="RF">RF</option>
        			</param>
				</when>
    		</conditional>
			<repeat name="PE_fastqFiles" title="FASTQ file" min="1" default="1">
        		<param name="PE_FASTQ_R1" type="data" format="fastqsanger,fastqsanger.gz,fastq,fq"  multiple="false" label="Input the FASTQ file(R1)" help=""/>
				<param name="PE_FASTQ_R2" type="data" format="fastqsanger,fastqsanger.gz,fastq,fq"  multiple="false" label="Input the FASTQ file(R2)" help=""/>
			</repeat>
		</when>
    </conditional>
	<param name="transcript_length"   type="integer" value="200" label="Min contig length" help="The min contig length (default: 200)."/>

  </inputs>
  <stdio>
	<exit_code range="1:"  level="fatal" description="Error Running combine collection to a file" />
  </stdio>
  <outputs> 
	<data name="fastq0" format="fasta" label="Assembly_transfrags(By_TransLiG)">
	</data>
  </outputs>
  <help>
<![CDATA[
.. class:: infomark

**What it does**

In this function, TransLiG (Liu *et al*., 2019), a new *de novo* transcriptome assembler, which is able to integrate the sequence depth and pair-end information into the assembling procedure by phasing paths and iteratively constructing line graphs starting from splicing graphs. TransLiG is shown to be significantly superior to all the salient de novo assemblers in both accuracy and computing resources when tested on artificial and real RNA-seq data.

-----

.. class:: infomark

**Inputs**

- **Input FASTQ files:**  Input cleaned  sequence reads in FASTQ format

-----

.. class:: infomark

**Parameters**

- **Min contig length:** The min contig length (default: 200)
- **Strand-specific information:** Strand-specific RNA-Seq read orientation.if paired: RF or FR,if single: F or R.   (dUTP method = RF)

-----

.. class:: infomark

**Outputs**

- **de novo transcriptome assembly in FASTA format**

]]>

  </help>
   <citations>
        <citation type="doi">10.1186/s13059-019-1690-7</citation>
    </citations>
</tool>